import { Injectable } from '@angular/core';
import * as fs from 'file-saver';
import { Workbook } from 'exceljs';
import { RouterEvent } from '@angular/router';

@Injectable({
  providedIn: 'root'
})
export class ExportService {

  constructor() { }
  async generateExcel(data: any[], fileName: string, title: string, header: any[]) {

    // Create workbook and worksheet
    const workbook = new Workbook();
    const worksheet = workbook.addWorksheet('Sheet 1');
    var username = localStorage.getItem('UserName')


// Add Row and formatting
    const titleRow = worksheet.addRow([title]);
    titleRow.font = { name: 'Corbel', family: 4, size: 16, underline: 'double', bold: true };
    worksheet.addRow([]);
    const subTitleRow = worksheet.addRow([`Generated by ${username} on ${new Date().toDateString()}`]);

    worksheet.mergeCells('A1:D2');


// Blank Row
    worksheet.addRow([]);

// Add Header Row
    const headerRow = worksheet.addRow(header);

// Cell Style : Fill and Border
    headerRow.eachCell((cell, number) => {
  cell.fill = {
    type: 'pattern',
    pattern: 'solid',
    fgColor: { argb: '0070c0' },
    bgColor: { argb: '0070c0' }
  };
  cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' }};
  cell.font = {color: {argb: 'FFFFFF'}}
  cell.alignment = {wrapText: true };
  
  const dobCol = worksheet.getColumn(number);
  dobCol.width = 20;
});


// Add Data 
data.forEach(d => {
  const row = worksheet.addRow(d);
  row.eachCell({includeEmpty: true}, (cell => {
    cell.alignment = {wrapText: true };
    //cell.col
}));


}

);

worksheet.addRow([]);




// Footer Row
    const footerRow = worksheet.addRow(['This is a system generated excel sheet.']);
    footerRow.getCell(1).fill = {
  type: 'pattern',
  pattern: 'solid',
  fgColor: { argb: 'FFCCFFE5' }
};
    footerRow.getCell(1).border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };

// Merge Cells
    worksheet.mergeCells(`A${footerRow.number}:F${footerRow.number}`);

// Generate Excel File with given name
    workbook.xlsx.writeBuffer().then((data: any) => {
  const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
  fs.saveAs(blob, fileName);
});

  }
}
